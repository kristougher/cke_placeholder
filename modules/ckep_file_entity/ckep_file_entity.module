<?php

/**
 * @file
 * Implementation of file entity media library for CKE Placeholder.
 */

require_once 'ckep_file_entity.library.inc';
/**
 * Implements hook_help().
 */
function ckep_file_entity_help($route_name, RouteMatchInterface $route_match) {
 if  ($route_name == 'help.page.ckep_file_entity') {
      return t('<p>The CKEditor Placeholder File Entity module insert file entities in CKEditor fields.</p>');
  }
}
/**
 * Implements hook_cke_placeholder_library()
 */
function ckep_file_entity_cke_placeholder_library() {
  $tabs = array();

  $tabs['ckep_file_entity'] = array(
    'pane_title' => t('Media library'),
    'list_callback' => 'ckep_file_entity_library_source_list_result',
    'list_wrapper_id' => 'ckep_file_entity-media-list',
    'form' => 'ckep_file_entity_library_form',
    'file' => 'ckep_file_entity.library.inc',
    'module' => 'ckep_file_entity',
  );

  $tabs['upload_file'] = array(
    'form' => 'ckep_file_entity_upload_form',
    'pane_title' => t('Upload file'),
    'file' => 'ckep_file_entity.library.inc',
    'module' => 'ckep_file_entity',
  );

  return $tabs;
}

/**
 * Implements hook_cke_placeholder_tags().
 */
function ckep_file_entity_cke_placeholder_tags() {
  $filters = array();

  $filters['ckep_file_entity'] = array(
    'editables' => array(
      'caption' => array(
        'label' => t('Caption'),
        'allowed_content' => 'strong em i',
      ),
    ),
    'key' => array('id', 'type'),
    'set_alignment' => array(
      'left' => t('Left'),
      'right' => t('Right'),
      'full' => t('Full'),
    ),
    'process' => 'ckep_file_entity_widget_process',
    'preview_process' => 'ckep_file_entity_widget_preview_process',
  );
  return $filters;
}

/**
 * Implements hook_theme()
 */
function ckep_file_entity_theme() {
  $themes = [
    'ckep_file_entity_inline_image' => [
      'variables' => [
        'picture_tag' => NULL,
        'caption' => NULL,
        'maxwidth_style' => NULL,
        'alignment_class' => NULL,
      ],
      'template' => 'templates/ckep_file_entity.inline_image',
    ],
   'ckep_file_entity_library_item' => [
      'variables' => [
        'title' => NULL,
        'thumbnail_url' => NULL,
        'file_url' => NULL,
        'caption' => NULL,
        'editlink' => NULL,
        'type' => NULL,
      ],
      'template' => 'templates/ckep_file_entity.library_item',
    ]
 ];

  return $themes;
}

/**
 * Get the content that should be available in the media library.
 *
 * @param null|string $type
 *   The entity type to fetch.
 *
 * @return array
 *   Renderable array for the media library.
 */
function ckep_file_entity_source_list($form, &$form_state, $type = NULL) {
  $items = ckep_file_entity_library_source_list_result($form_state, $form_state['values']['cke_placeholder_library']['search']);
  $form['cke_placeholder_library']['results'] = theme('cke_placeholder_library_item', array(
    'cke_placeholder_tag' => 'ckep_file_entity',
    'items' => $items,
    'wrapper_id' => 'ckep_file_entity-media-list',
  ));

  return $form['cke_placeholder_library']['results'];
}

/**
 * Get the content that should be available in the media library.
 *
 * @param null|string $type
 *   The entity type to fetch.
 *
 * @return array
 *   Renderable array for the media library.
 */
function ckep_file_entity_library_source_list_result(&$form_state, $search = NULL, $type = NULL, $count = 8, $offset = 0) {

  $files = _ckep_file_entity_media_db_query($offset, $count, $search, $type);

  if (count($files) > $count) {
    $form_state['cke_placeholder_library']['show_next_button'] = TRUE;
    end($files);
    $file_key = key($files);
    unset($files[$file_key]);
  }

  foreach ($files as $file) {
    $file_caption = !empty($file->field_caption) ? $file->field_caption['und'][0]['value'] : '';
    $file_title = !empty($file->field_file_image_title_text)
      ? $file->field_file_image_title_text['und'][0]['value'] : $file->filename;

    if ($file->type == 'image') {
      $thumb = image_style_url('thumbnail', $file->uri);
    }
    else {
      $thumb = drupal_get_path('module', 'ckep_file_entity') . '/assets/document.png';
    }
    $theme_vars = array(
      'title' => $file_title,
      'thumbnail_url' => $thumb,
      'file_url' => file_create_url($file->uri),
      'caption' => $file_caption,
      'editlink' => sprintf('file/%d/edit', $file->fid),
      'type' => $file->type,
    );
    $file_markup = theme('ckep_file_entity_library_item', $theme_vars);

    $result[] = array(
      'data' => array(
        'id' => $file->fid,
        'type' => $file->type,
        'caption' => $file_caption,
      ),
      'markup' => $file_markup,
    );
  }

  return $result;
}

function _ckep_file_entity_media_db_query($offset = 0, $count = 8, $search_term = NULL, $type = NULL) {
  module_load_include('inc', 'file_entity', 'file_entity.admin');

  // Select files from the DB
  $query = db_select('file_managed', 'fm');
  // $query->condition('fm.type', $bundle);
  $query->groupBy('fm.fid');
  $query->groupBy('fm.uid');
  $query->groupBy('fm.timestamp');

  if (!empty($search_term)) {
    $query->condition('fm.filename', '%' . db_like($search_term) . '%', 'LIKE');
  }

  $result = $query
    ->fields('fm', array('fid', 'uid'))
    ->addTag('file_access')
    ->orderBy('fm.timestamp', 'DESC')
    ->range($offset, $count + 1)
    ->execute()
    ->fetchAllAssoc('fid');

  if (empty($result)) {
    return array();
  }

  $files = file_load_multiple(array_keys($result));
  return $files;
}

/**
 * Process callback for embed widget tag.
 *
 * @ingroup callbacks
 */
function ckep_file_entity_widget_process($media_values, $filter) {
  $file = file_load($media_values['id']);
  $output = '';

  if ($file->type == 'image') {
    $variables = array(
      'style_name' => 'large',
      'path' => $file->uri,
    );

    $picture_tag = theme('image_style', $variables);

    $output = theme('ckep_file_entity_inline_image', array(
      'picture_tag' => $picture_tag,
      'caption' => urldecode($media_values['caption']),
    ));
  }
  else {
    $output = render(file_view($file, 'teaser'));
  }

  return $output;
}

/**
 * Process callback for embed widget tag.
 *
 * @ingroup callbacks
 */
function ckep_file_entity_widget_preview_process($media_values, $filter) {
  // Loads the file.
  $output = '';
  $file = file_load(intval($media_values['id']));

  $image_url = image_style_url('thumbnail', $file->uri);

  $wrap_style = 'full';

  if (!empty($media_values['alignment']) && ($media_values['alignment'] != 'full')) {
    $wrap_style = trim($media_values['alignment']);
  }

  if ($file->type == 'image') {
    $output = theme('ckep_file_entity_inline_image', array(
      'picture_tag' => theme('image', array('path' => $image_url)),
      'alignment_class' => 'body-text__picture--',
    ));
  }
  else {
    $output = render(file_view($file, 'teaser'));
  }
  return $output;
}


/**
 * Submit handler for the custom upload form.
 */
function ckep_file_entity_library_form_upload_submit($form, &$form_state) {
  // The form is submitted twice, with a different fid value hence the check.
  if (empty($form_state['values']['cke_placeholder_file_upload']['new_file'])
      || !is_numeric($form_state['values']['cke_placeholder_file_upload']['new_file'])) {
    return;
  }

  $upload_data = $form_state['values']['cke_placeholder_file_upload'];
  $file = file_load($upload_data['new_file']);

  $file->status = FILE_STATUS_PERMANENT;

  // Store both title and file name in same DB field to speedup and simplify
  // file lookup in media browser.
  if (!empty($upload_data['file_details']['title'])) {
    $file->filename = $upload_data['file_details']['title'] . ' | ' . $file->filename;
    $file->field_file_image_title_text = array(
      LANGUAGE_NONE => array(
        array(
          'value' => $upload_data['file_details']['title'],
        ),
      ),
    );
  }

  // Save image specific fields.
  if ($file->type == 'image') {
    if (!empty($upload_data['file_details']['field_alt'])) {
      $file->field_file_image_alt_text = array(
        LANGUAGE_NONE => array(
          array(
            'value' => $upload_data['file_details']['field_alt'],
          ),
        ),
      );
    }

    if (!empty($upload_data['file_details']['field_caption'])) {
      $file->field_caption = array(
        LANGUAGE_NONE => array(
          array(
            'value' => $upload_data['file_details']['field_caption'],
          ),
        ),
      );
    }
  }

  file_save($file);

  $form_state['values']['cke_placeholder_file_upload']['new_file'] = array();
  $form_state['input'] = array();
  $form_state['new_fid'] = $file->fid;
  $form_state['rebuild'] = TRUE;
}

/**
 * Return the upload fieldset with an active class to keep it displayed.
 *
 * Remove value in upload field and add a draggable preview of the file.
 */
function ckep_file_entity_library_upload_callback($form, &$form_state) {

  $form['cke_placeholder_file_upload']['#prefix'] = '<div id="upload_file-wrap" class="active cke-placeholder-fieldset-wrapper">';

  if (empty($form_state['new_fid'])) {
    $form['cke_placeholder_file_upload']['new_file']['#prefix'] = theme('html_tag', array(
      'element' => array(
        '#tag' => 'p',
        '#value' => t('An error occurred. The image may be available in the media library, but the metadata was not applied.'),
      ),
    ));

    return render($form['cke_placeholder_file_upload']);
  }

  $fid = $form_state['new_fid'];
  $file = file_load($fid);

  $form['cke_placeholder_file_upload']['file']['#default_value'] = NULL;
  $form['cke_placeholder_file_upload']['#attributes']['class'][] = 'active';

  $img = $file_url = $caption = $file_alt = '';
  if ($file->type == 'image') {
    $img = image_style_url('thumbnail', $file->uri);
    $caption = !empty($file->field_caption) ? $file->field_caption[LANGUAGE_NONE][0]['value'] : '';
    $file_alt = !empty($file->field_file_image_alt_text) ?  $file->field_file_image_alt_text['und'][0]['value'] : '';
  }
  else {
    $file_url = file_create_url($file->uri);
  }

  // Files are inserted via simple link drag-n-drop unlike images, hence the
  // need for actual title if one was provided.
  if ($file->type == 'document') {
    $file_title = !empty($file->field_file_image_title_text)
      ? $file->field_file_image_title_text['und'][0]['value'] : $file->filename;
  }
  else {
    $file_title = $file->filename;
  }
  $preview_markup = theme('ckep_file_entity_library_item', array(
    'title' => $file_title,
    'thumbnail_url' => $img,
    'file_url' => $file_url,
    'caption' => $caption,
    'type' => $file->type,
  ));
  $item = array(
    'markup' => $preview_markup,
    'data' => array(
      'id' => $fid,
      'type' => $file->type,
      'alt' => $file_alt,
      'caption' => $caption,
      'title' => $file->filename,
    )
  );

  $drag_markup = theme('cke_placeholder_library_item', array(
    'cke_placeholder_tag' => 'ckep_file_entity',
    'items' => array($item),
  ));

  $form['cke_placeholder_file_upload']['new_file']['#prefix'] = $drag_markup . $form['cke_placeholder_file_upload']['new_file']['#prefix'];

  return render($form);
}

